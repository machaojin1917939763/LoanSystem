<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StuCollegeMapper">
    
    <resultMap type="StuCollege" id="StuCollegeResult">
        <result property="collegeId"    column="college_id"    />
        <result property="name"    column="name"    />
        <result property="creator"    column="creator"    />
        <result property="totalStudents"    column="total_students"    />
        <result property="totalBorrowers"    column="total_borrowers"    />
        <result property="totalContracts"    column="total_contracts"    />
        <result property="createTime"    column="create_time"    />
        <result property="updater"    column="updater"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectStuCollegeVo">
        select college_id, name, creator, total_students, total_borrowers, total_contracts, create_time, updater, update_time from stu_college
    </sql>

    <select id="selectStuCollegeList" parameterType="StuCollege" resultMap="StuCollegeResult">
        <include refid="selectStuCollegeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="creator != null  and creator != ''"> and creator = #{creator}</if>
            <if test="totalStudents != null "> and total_students = #{totalStudents}</if>
            <if test="totalBorrowers != null "> and total_borrowers = #{totalBorrowers}</if>
            <if test="totalContracts != null "> and total_contracts = #{totalContracts}</if>
            <if test="updater != null  and updater != ''"> and updater = #{updater}</if>
        </where>
    </select>
    
    <select id="selectStuCollegeByCollegeId" parameterType="Long" resultMap="StuCollegeResult">
        <include refid="selectStuCollegeVo"/>
        where college_id = #{collegeId}
    </select>
        
    <insert id="insertStuCollege" parameterType="StuCollege" useGeneratedKeys="true" keyProperty="collegeId">
        insert into stu_college
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="creator != null">creator,</if>
            <if test="totalStudents != null">total_students,</if>
            <if test="totalBorrowers != null">total_borrowers,</if>
            <if test="totalContracts != null">total_contracts,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updater != null">updater,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="creator != null">#{creator},</if>
            <if test="totalStudents != null">#{totalStudents},</if>
            <if test="totalBorrowers != null">#{totalBorrowers},</if>
            <if test="totalContracts != null">#{totalContracts},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updater != null">#{updater},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateStuCollege" parameterType="StuCollege">
        update stu_college
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="creator != null">creator = #{creator},</if>
            <if test="totalStudents != null">total_students = #{totalStudents},</if>
            <if test="totalBorrowers != null">total_borrowers = #{totalBorrowers},</if>
            <if test="totalContracts != null">total_contracts = #{totalContracts},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updater != null">updater = #{updater},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where college_id = #{collegeId}
    </update>

    <delete id="deleteStuCollegeByCollegeId" parameterType="Long">
        delete from stu_college where college_id = #{collegeId}
    </delete>

    <delete id="deleteStuCollegeByCollegeIds" parameterType="String">
        delete from stu_college where college_id in 
        <foreach item="collegeId" collection="array" open="(" separator="," close=")">
            #{collegeId}
        </foreach>
    </delete>
</mapper>